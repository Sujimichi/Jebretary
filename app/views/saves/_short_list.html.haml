- save_type = save_type.to_sym
-unless saves[save_type].blank?
  - latest = saves[save_type].first
  -if has_change
    .new_save_detected= "New #{save_type.capitalize} detected, hang on while I commit it..."
  - saves[save_type][0..4].each_with_index do |qsave, index|
    - message = qsave.message
    - message = campaign_commit_messages[qsave.to_s] unless campaign_commit_messages[qsave.to_s].blank?
    .small.small
      .left= qsave.date.to_formatted_s(:short)
      .left.with_margin= "#{time_ago(qsave.date)} ago"
      .right
        - unless index.eql?(0)
          = link_to("restore", edit_save_path(:id => campaign.id, :sha_id => qsave.to_s, :save_type => save_type), :remote => true)
        -else
          = "current #{save_type}"
          -if save_type.eql?(:persistent)
            .small= link_to("set as quicksave", edit_save_path(:id => campaign.id, :sha_id => qsave.to_s, :save_type => save_type, :set_as_quicksave => true), :remote => true)
      .clear
      .left
        - unless message.eql?("updated #{save_type}.sfs")
          .left= render "partials/show_message", :message => message
      .clear
  - unless has_change
    = link_to("add notes about current #{save_type}", edit_save_path(:id => campaign.id, :sha_id => saves[save_type].first.to_s, :save_type => save_type, :commit_message => true), :remote => true)
- else
  - if save_type.eql?(:quicksave)
    .small= "No quicksave file found."
    .small= "When you make a quicksave it will show up here"
