
-unless campaign.blank?
  :javascript
    auto_switch_display_based_on("#{most_recent_commit}");
    auto_show_deleted_craft_link("#{deleted_craft_count}")



  #content_for_campaign_saves.hidden
    .grid_8.alpha
      %h3 Saves
      = link_to "view full save history", campaign_saves_path(campaign)

    .clear
    .grid_6.alpha
      #quicksave_display
        .left.label= "Quicksaves |"
        .left= link_to_function "Persistent", "toggle_save_display()"
        .clear
        #quicksave_partial
          = render "saves/short_list", :saves => saves, :save_type => "quicksave", :campaign => campaign, :has_change => campaign.changed_save?("quicksave", repo), :campaign_commit_messages => campaign_commit_messages

      #persistent_display.hidden
        .left= link_to_function "Quicksaves", "toggle_save_display()"
        .left.label= "| Persistent"
        .clear
        #persistent_partial
          = render "saves/short_list", :saves => saves, :save_type => "persistent", :campaign => campaign, :has_change => campaign.changed_save?("persistent", repo), :campaign_commit_messages => campaign_commit_messages


  .clear
  #content_for_current_project.hidden
    - unless current_project.nil?
      %h3 Current Project
      .craft
        .name= link_to(current_project.name, craft_path(current_project))
        .clear
        -if new_and_changed[:new].include?("Ships/#{current_project.craft_type.upcase}/#{current_project.name}.craft")
          = "new"
        -else
          - changed = new_and_changed[:changed].include?("Ships/#{current_project.craft_type.upcase}/#{current_project.name}.craft")
          .left
            .left= "Number of versions: #{current_project.history_count}"
            .left.with_margin.small.aligned
              -if changed
                .untracked= " + untracked recent changes"
              -else
                = "(No new changes)"

          - if changed
            .left.with_margin
              = form_for(current_project, :remote => true) do |f|
                = hidden_field_tag :force_commit, true
                = f.submit "Commit (save) Now!"

          .clear
          - version = current_project.history_count
          - version ||= 1
          //- unless version.eql?(1)
          .left Revert to Previous Version:
          .left.with_margin
            - n = changed ? 0 : 1
            - recent_history = current_project_history[n..(n+2)]
            - version += 1 if changed
            - unless recent_history.nil?
              - recent_history.each_with_index do |prev_version, index|
                = link_to "V#{version -= 1}", {:controller => "crafts", :action => "edit", :id => current_project.id, :sha_id => prev_version.sha_id, :return_to => :campaign}, :title => prev_version.message
                -unless prev_version == recent_history.last
                  |
          .left
            - if current_project_history.size > 4
              |
              = link_to "more", craft_path(current_project)
            = "|" unless current_project_history.size.eql?(1) && !changed
            = link_to_function "info", "show_current_project_help(#{current_project_history.size})"
          .clear
          .message
            - commit = current_project_history.first
            - if commit

              - commit = "most_recent" if changed
              - message = current_project_commit_messages[commit.to_s]
              - message ||= commit.message unless changed

              -if changed && current_project_commit_messages[commit.to_s].blank?
                %h4
                  %a{:onclick => "change_message(this, '#{message}', #{current_project.id}, '#{commit.to_s}')", :href => '#'}
                    Click to Add Notes:
              -else
                .message_text{:onclick => "change_message(this, '#{message}', #{current_project.id}, '#{commit.to_s}')"}
                  - message.split("<br>").each do |m|
                    .small= m
                  .small.label= "click text to edit"
              .message_form{:id => "message_form_for_#{commit.to_s}", :class => (changed ? "with_untracked_changes" : "")}

    - else
      %h3 No Current Project Defined
      %h5 what you looking at me for, Go Build something!


  .clear
  #content_for_subassemblies
    - if subassemblies.empty?
      .centered
        %h3 You don't have any Subassemblies in this Campaign
      
    - subassemblies.each do |sub|
      .subassembly{:id => "subassembly_#{sub.id}", :class => sub.deleted? ? "deleted_craft" : ""}
        .name= link_to sub.name.truncate(35), subassembly_path(sub)
        .history
          -unless sub.deleted?
            = "#{sub.history_count} version#{sub.history_count.eql?(1) ? '' : 's'}" unless sub.history_count.nil?
          -else
            = "deleted"
        .sub_container
        
    
  
  - craft_for_list.each do |type, crafts|
    %div{:id => "content_for_#{type}_list"}
      - unless crafts.blank?
        - sort_by = sort_opts[type]
        - reverse_order = sort_by.include?('reverse')
        - crafts = crafts.sort_by{|c| c.send(sort_by.sub("reverse", "").strip)}
        - crafts.reverse! if reverse_order
        - crafts.each do |craft|
          -# next if craft.eql?(current_project)
          - part_data = craft.part_data
          - craft.crafts_campaign = campaign
          - klass = ""
          - klass << (part_data[:stock] ? "stock_craft" : "mod_craft") unless part_data.empty?
          - klass << " missing_parts" if part_data[:missing_parts] && !part_data[:missing_parts].empty?
          - klass << " deleted_craft" if craft.deleted?
          .craft_container{:class => klass}
            .craft
              .error= "!!"
              .name= truncated_link_to craft.name, craft_path(craft)
              .clear
              .git_info
                - unless craft.deleted?
                  -if new_and_changed[:new].include?("Ships/#{craft.craft_type.upcase}/#{craft.name}.craft")
                    = "new"
                  -else
                    - changed = new_and_changed[:changed].include?("Ships/#{craft.craft_type.upcase}/#{craft.name}.craft")
                    = changed ? "untracked" : "tracked"

                -else
                  deleted
              .history
                Number of versions:
                = craft.history_count
                -if craft.part_count && !craft.part_count.eql?(0)
                  .small
                    = craft.part_count
                    = craft.part_count.eql?(1) ? "Part" : "Parts"
                    - unless part_data.empty?
                      - unless part_data[:stock].nil?
                        |
                        = part_data[:stock] ? "Stock" : "Mod"
                      - unless part_data[:missing_parts].empty?
                        |
                        .missing= "missing #{part_data[:missing_parts].size} parts"
              
              .action_links
                .links
                  - unless craft.deleted?
                    = link_to "mcs", edit_transfer_path(craft), :remote => true
                    |
                    = link_to "d", edit_craft_path(craft), :remote => true
                  - else
                    = link_to "recover", craft_path(craft)
                
                
              -unless craft.sync[:with].blank?
                .clear
                .sync_status
                  .info= "Sync'd with #{(craft.sync[:with] - [craft.campaign_id]).size} campaigns"
          .clear

