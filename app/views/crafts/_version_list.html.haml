
-if @craft
  - version = @craft.history_count
  - version ||= 1
  = "#{@craft.name} has #{version} versions"
  .clear
  - changed = @craft.is_changed?
  -if changed
    .left
      .untracked Plus Untracked changes
    .left.with_margin
      = form_for(@craft, :remote => true) do |f|
        = hidden_field_tag :force_commit, true
        = f.submit "Commit (save) Now!"
  .clear
  .craft_history
    - history.each do |commit|
      .craft_info
        .craft_details
          .version= "V#{1 + (version -= 1)}"
          .value
            .hidden.sha_id= commit.sha
          .date= commit.date.to_formatted_s(:short)
          .restore_link
            - unless commit == history.first && !changed
              = link_to "Restore", :controller => "crafts", :action => "edit", :id => @craft, :sha_id => commit.sha
            -else
              Current Version

        .message
          - #onclick = "change_message(this, '#{commit.message}', #{@craft.id}, '#{commit.to_s}')"
          - #edit of past messages disabled for now as it still can cause the repo to be left in an incomplete rebase
          - message = @craft.commit_messages[commit.to_s]
          - message ||= commit.message

          .message_text
            - message.split("<br>").each do |m|
              .small= m

          .message_form{:id => "message_form_for_#{commit.to_s}"}
