Jebretary

==Issues

  =Editing Commit Messages
    - cant add/edit commit message during the period where the craft is being added to the repo.
      + most annoying cos this is in the time while waiting for the game to load to launchpad when u would most want to write a note.
      +problem is System.process will have updated the craft object in the DB in the time it takes to fill the craft update form.

    - Response from adding/updating a message will sometimes crash the interface. Although most times the update is written.

    - cant put new line in commit message


  =General
    - occasionally shows the no campaigns messages on instances show page when there are campaigns present.
    - deleting a craft with untracked changes crashes the interface


==Planned/Todo
  - quicksave and persistent tracking
    - quicksave will be tracked when ever it is seen to change, or manually
    - persistent will be tracked when a quicksave is tracked, manually or if the repo needs to have no untracked changes for a message update.
  - ability to not track a craft (remove from repo)
  - selectable ordering on craft lists

  - craft actions like delete and move/copy. delete will delete the craft file, move/copy will move/copy craft files between campaigns.
  - ability to set a craft to exist in all (select) campaigns and reflect changes made in either campaign.

  - different save modes {
      :agressive  => saves on every change to a craft,
      :laid_back  => saves when change in persistent.sfs is detected (ie on launch),
      :drunk      => no auto saving, leaves that up to the user
    }


  - part count display

  - indicator by craft in list that show if they are in service (might not be possible as craft can be renammed in flight)

  - screen shot auto-associating. Given a knowledge of where a players scr-shots go, during a certain period after launch associate any new scr-shots with the craft
    - this feature would introduce a dependence on the DB, up till now all info is recreatable from the git repo (the DB mearly acts to index).
    - possibile upload to imgur option?


    ==MajorFeature- Online System - JebWeb
      - users sign up for an account online with JebWeb and get a token which they set in Jebretary
      - Jebretary can use this token to access the users online account and can then transmit craft to the users account
      - This would enable online, cloud storage of craft and would be a way of sharing craft.
        - craft will also have more info, including analysis of required mods.

      - A craft posted on JebWb can just be updated with a click from Jerbretary.
      - option to have private and public craft, like GitHub it will be free to store public craft and it will cost to have more than 5 private craft.




==0.0.7
  - improved commit message editing.  Now current commit message can be editied while the git repo is not in a state to take a message update
    + messages from previous commits can still be edited as before
    + messages are edited in a dialog which gets around the page update issue
  - changed how craft are reverted.  Instead of reverting automattically creating a new commit (version), now reverting a craft leaves it as untracked changes.  Makes it easier to quickly check a past version and then return to current state, or check out several past versions one after the other while looking for the right one (without each checkout automatically meaning a new commit).
  - started adding help tips to appear on first use and on request
  - added settings file which currently is used to track which help tips the user has seen.
  - optimized System.process (background polling loop).

==0.0.6
  - autosaved ships are no longer shown as current project
  - flags for campaigns are processed sooner
  - craft previously deleted in the repo are now detected (and craft object assigned as marked as deleted).  Now previously deleted craft can be recovered

==0.0.5
  - can now choose to revert to a previous commit without commiting the revert.  This allows for a temporary revert without adding more to the timeline
  - can now revert while there are untracked changes, with a warning to say untracked changes will be lost

==0.0.4
  Stuff that happened before
